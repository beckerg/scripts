#!/bin/sh
#
# Bind Intel interrupt threads to different cores
# Adapted from same chelsio RC script by farrokhi@FreeBSD.org
# https://github.com/ocochard/BSDRP/blob/master/BSDRP/Files/usr/local/etc/rc.d/ix_affinity
# Reworked to maintain NIC and CPU domain affinity.

# PROVIDE:	ix_affinity
# REQUIRE:	FILESYSTEMS netif
# KEYWORD:	nojail

# Add the following lines to /etc/rc.conf.local or /etc/rc.conf
# to enable this service:
#
# ix_affinity_enable (bool):   Set to NO by default.
#               Set it to YES to bind interrupt threads to different cores

. /etc/rc.subr

name="ix_affinity"
rcvar=${name}_enable

TPC=$(/sbin/sysctl -n kern.smp.threads_per_core || echo 1)

start_cmd="ix_affinity_start"

ix_affinity_start()
{
    # Work with 2 CPU minimum
    NCPU=$(/sbin/sysctl -n hw.ncpu)
    if [ ${NCPU} -le 2 ]; then
	echo "Not enough CPU detected"
	exit
    fi

    # Need an Intel NIC
    ix=$(/sbin/sysctl dev.ix. | grep -c link_irq)
    if [ "${ix}" -eq 0 ]; then
	echo "No Intel ix ports detected"
	exit
    fi

    for i in $(seq 0 $((ix - 1))); do
	D=$(/sbin/sysctl -nq dev.ix.$i.%domain || echo 0)
	set -- $(/usr/bin/cpuset -g -d $D | sed 's/^.*mask: //g;s/,//g')

	for IRQ in `/usr/bin/vmstat -ai |\
	    	    	/usr/bin/sed -nE "/ix${i}:rxq./ s/irq([[:digit:]]+):.*/\1/p"`; do
	    if [ $# -lt 1 ] ; then
		echo "out of cpus"
		exit 1
	    fi

	    CPU=$1

	    # Assume that vCPUs are enumerated as [0,1] [2,3] [4,5] ...
	    # rather than something like [0,8] [1,9] [2,10] ...
	    shift ${TPC}

	    echo "Bind ix${i} IRQ ${IRQ} to CPU ${CPU}"
	    /usr/bin/cpuset -l ${CPU} -x ${IRQ}
	done
    done
}

load_rc_config $name

: ${ix_affinity_enable="NO"}

run_rc_command "$1"
